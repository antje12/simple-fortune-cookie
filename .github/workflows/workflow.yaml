name: Fortune Cookie CI
on: [push, pull_request]
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
jobs:
  Lint:
    name: lint job
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: checkout-step
        uses: actions/checkout@v2
      - name: go-lint-backend
        uses: Jerome1337/golint-action@v1.0.2
        with:
          golint-path: './backend'
      - name: go-lint-frontend
        uses: Jerome1337/golint-action@v1.0.2
        with:
          golint-path: './frontend'

  Unit-Test:
    name: unit test job
    runs-on: ubuntu-latest
    needs: Lint
    steps:
      - name: checkout-step
        uses: actions/checkout@v2
      - name: run-test-step
        run: go test ./frontend
  
  Build-Frontend:
    name: build frontend job
    runs-on: ubuntu-latest
    needs: Unit-Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend:GA-${{ github.sha }} 

  Build-Backend:
    name: build backend job
    runs-on: ubuntu-latest
    needs: Unit-Test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:GA-${{ github.sha }}

  Test-Environment-Deploy:
    name: test environment deploy job
    runs-on: self-hosted
    needs: [Build-Frontend, Build-Backend]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Change frotnend deploy file tags
        run: sed -i "s+{IMG_TAG}+GA-${{ github.sha }}+g" ./kubernetes/test-env/deployment-frontend.yaml
      - name: Change backend deploy file tags
        run: sed -i "s+{IMG_TAG}+GA-${{ github.sha }}+g" ./kubernetes/test-env/deployment-backend.yaml
      - name: Deploy to Kubernetes
        run: >- 
          kubectl apply 
          -f ./kubernetes/test-env/pvc-redis.yaml
          -f ./kubernetes/test-env/deployment-redis.yaml
          -f ./kubernetes/test-env/service-redis.yaml
          -f ./kubernetes/test-env/deployment-backend.yaml
          -f ./kubernetes/test-env/service-backend.yaml
          -f ./kubernetes/test-env/deployment-frontend.yaml
          -f ./kubernetes/test-env/service-frontend.yaml
          -f ./kubernetes/test-env/test-ingress.yaml

  Test-Environment-Health-Test:
    name: test environment health test job
    runs-on: self-hosted
    needs: Test-Environment-Deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
    steps:
      - name: Curl
        run: bash ./scripts/kubernetes-test.sh 30 80
      - name: Teardown test environment
        if: always() 
        run: >- 
          kubectl delete 
          -f ./kubernetes/test-env/deployment-frontend.yaml
          -f ./kubernetes/test-env/service-frontend.yaml
          -f ./kubernetes/test-env/deployment-backend.yaml
          -f ./kubernetes/test-env/service-backend.yaml
          -f ./kubernetes/test-env/deployment-redis.yaml
          -f ./kubernetes/test-env/service-redis.yaml
          -f ./kubernetes/test-env/pvc-redis.yaml
          -f ./kubernetes/test-env/test-ingress.yaml

  Production-Deploy:
    name: production deploy job
    runs-on: self-hosted
    needs: [Test-Environment-Health-Test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Change frotnend deploy file tags
        run: sed -i "s+{IMG_TAG}+GA-${{ github.sha }}+g" ./kubernetes/prod-env/deployment-frontend.yaml
      - name: Change backend deploy file tags
        run: sed -i "s+{IMG_TAG}+GA-${{ github.sha }}+g" ./kubernetes/prod-env/deployment-backend.yaml
      - name: Deploy to Kubernetes
        run: >- 
          kubectl apply 
          -f ./kubernetes/prod-env/pvc-redis.yaml
          -f ./kubernetes/prod-env/deployment-redis.yaml
          -f ./kubernetes/prod-env/service-redis.yaml
          -f ./kubernetes/prod-env/deployment-backend.yaml
          -f ./kubernetes/prod-env/service-backend.yaml
          -f ./kubernetes/prod-env/deployment-frontend.yaml
          -f ./kubernetes/prod-env/service-frontend.yaml

  Prod-Health-Test:
    name: prod health test job
    runs-on: self-hosted
    needs: Production-Deploy
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Curl
        run: bash ./scripts/kubernetes-test.sh 0 32540
